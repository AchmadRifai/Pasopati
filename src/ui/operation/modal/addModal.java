/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.operation.modal;

import java.awt.Color;
import java.net.UnknownHostException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import javax.swing.JOptionPane;

/**
 *
 * @author ai
 */
public class addModal extends javax.swing.JFrame {
private util.db d;
private entity.Akun a;
    /**
     * Creates new form addModal
     */
    public addModal(util.db db,entity.Akun akun) {
        a=akun;d=db;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        init = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        ket = new javax.swing.JTextArea();
        tipe = new javax.swing.JComboBox<>();
        kode = new javax.swing.JTextField();
        s = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Aset");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Kode");

        jLabel2.setText("Tipe");

        jLabel3.setText("Initial");

        jLabel4.setText("Ket");

        init.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        init.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                initStateChanged(evt);
            }
        });

        ket.setColumns(20);
        ket.setRows(5);
        ket.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ketKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(ket);

        tipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "lancar", "tetap" }));
        tipe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipeItemStateChanged(evt);
            }
        });

        kode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kodeKeyReleased(evt);
            }
        });

        s.setText("SAVE");
        s.setEnabled(false);
        s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(init)
                            .addComponent(tipe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kode))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(init, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(s)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void kodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeKeyReleased
    try {
        java.sql.PreparedStatement ps=d.getPS("select kode=? as oke from aset");ps.setString(1, kode.getText());
        java.sql.ResultSet rs=ps.executeQuery();if(rs.next()){
            if(rs.getBoolean("oke"))kode.setForeground(Color.red);
            else kode.setForeground(Color.BLACK);
        }else kode.setForeground(Color.red);
        rs.close();ps.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        util.db.hindar(ex);
    }refresh();
    }//GEN-LAST:event_kodeKeyReleased

    private void tipeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipeItemStateChanged
        refresh();
    }//GEN-LAST:event_tipeItemStateChanged

    private void initStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_initStateChanged
        refresh();
    }//GEN-LAST:event_initStateChanged

    private void ketKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ketKeyReleased
        refresh();
    }//GEN-LAST:event_ketKeyReleased

    private void sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sActionPerformed
    try {
        entity.Aset aset=new entity.Aset(kode.getText(), ket.getText(), tipe.getItemAt(tipe.getSelectedIndex()),(int)init.getValue());
        entity.Jejak j=new entity.Jejak(a.getAkun(), "Inisialisasi "+kode.getText(), java.sql.Date.valueOf(LocalDate.now()), java.sql.Time.valueOf(LocalTime.now()),
                java.net.InetAddress.getLocalHost().getHostAddress());
        new entity.dao.DAOAset(d).insert(aset);new entity.dao.DAOJejak(d).insert(j);
        writeTrans();
        if(!a.isSesi()&&a.isRole())new akutansi.InitSaldo(d, a).setVisible(true);
        else if(a.isSesi()&&a.isRole())new ui.Admin(d, a).setVisible(true);
        this.setVisible(false);
    } catch (UnknownHostException | SQLException ex) {
        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        util.db.hindar(ex);
    }
    }//GEN-LAST:event_sActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    try {
        new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Membatalkan penambahan aset", java.sql.Date.valueOf(LocalDate.now()),
                java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
    } catch (SQLException | UnknownHostException ex) {
        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        util.db.hindar(ex);
    }if(!a.isSesi()&&a.isRole())new akutansi.InitSaldo(d, a).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner init;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ket;
    private javax.swing.JTextField kode;
    private javax.swing.JButton s;
    private javax.swing.JComboBox<String> tipe;
    // End of variables declaration//GEN-END:variables

    private void refresh() {
        s.setEnabled(!kode.getText().isEmpty()&&!ket.getText().isEmpty()&&Color.BLACK==kode.getForeground());
    }

    private void writeTrans() throws SQLException {
        entity.Trans t=new entity.Trans("",kode.getText(),"Initial Modal "+kode.getText(),java.sql.Date.valueOf(LocalDate.now()),java.sql.Time.valueOf(LocalTime.now()),
                (int)init.getValue(),a.getAkun());
        t.setKode(kode.getText()+"_"+a.getAkun()+"_"+t.getTgl().getDate()+"-"+t.getTgl().getMonth()+"-"+t.getTgl().getYear()+"_"+t.getJam().getHours()+":"+
        t.getJam().getMinutes()+":"+t.getJam().getSeconds());
        new entity.dao.DAOTrans(d).insert(t);
    }
}
