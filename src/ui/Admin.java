/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.net.UnknownHostException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import javax.swing.JOptionPane;

/**
 *
 * @author ai
 */
public class Admin extends javax.swing.JFrame {
private util.db d;
private entity.Akun a,sa;
private entity.Aset aset;
private entity.Hutang hutang;
private entity.Menyicil menyicil;
    /**
     * Creates new form Admin
     */
    public Admin(util.db db,entity.Akun akun) {
        a=akun;
        d=db;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        eak = new javax.swing.JButton();
        hak = new javax.swing.JButton();
        jToolBar3 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        ea = new javax.swing.JButton();
        has = new javax.swing.JButton();
        jToolBar4 = new javax.swing.JToolBar();
        jButton4 = new javax.swing.JButton();
        uh = new javax.swing.JButton();
        dh = new javax.swing.JButton();
        jToolBar5 = new javax.swing.JToolBar();
        jButton5 = new javax.swing.JButton();
        em = new javax.swing.JButton();
        hm = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAkun = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAset = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        ja = new javax.swing.JComboBox<>();
        tglJejak = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblJejak = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHutang = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        sh = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblMenyicil = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Admin Dasboard For ");
        setMaximumSize(new java.awt.Dimension(2147, 2147));
        setSize(new java.awt.Dimension(2147, 2147));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setRollover(true);

        jButton1.setText("LOGOUT");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jTabbedPane1.addTab("HOME", jToolBar1);

        jToolBar2.setRollover(true);

        jButton2.setText("ADD");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton2);

        eak.setText("EDIT");
        eak.setEnabled(false);
        eak.setFocusable(false);
        eak.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eak.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eakActionPerformed(evt);
            }
        });
        jToolBar2.add(eak);

        hak.setText("HAPUS");
        hak.setEnabled(false);
        hak.setFocusable(false);
        hak.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hak.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        hak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hakActionPerformed(evt);
            }
        });
        jToolBar2.add(hak);

        jTabbedPane1.addTab("AKUN", jToolBar2);

        jToolBar3.setRollover(true);

        jButton3.setText("ADD");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton3);

        ea.setText("EDIT");
        ea.setEnabled(false);
        ea.setFocusable(false);
        ea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eaActionPerformed(evt);
            }
        });
        jToolBar3.add(ea);

        has.setText("HAPUS");
        has.setEnabled(false);
        has.setFocusable(false);
        has.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        has.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        has.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasActionPerformed(evt);
            }
        });
        jToolBar3.add(has);

        jTabbedPane1.addTab("ASET", jToolBar3);

        jToolBar4.setRollover(true);

        jButton4.setText("ADD");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar4.add(jButton4);

        uh.setText("EDIT");
        uh.setEnabled(false);
        uh.setFocusable(false);
        uh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        uh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        uh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uhActionPerformed(evt);
            }
        });
        jToolBar4.add(uh);

        dh.setText("HAPUS");
        dh.setEnabled(false);
        dh.setFocusable(false);
        dh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        dh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dhActionPerformed(evt);
            }
        });
        jToolBar4.add(dh);

        jTabbedPane1.addTab("HUTANG", jToolBar4);

        jToolBar5.setRollover(true);

        jButton5.setText("ADD");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar5.add(jButton5);

        em.setText("EDIT");
        em.setEnabled(false);
        em.setFocusable(false);
        em.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        em.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        em.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emActionPerformed(evt);
            }
        });
        jToolBar5.add(em);

        hm.setText("HAPUS");
        hm.setEnabled(false);
        hm.setFocusable(false);
        hm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hm.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        hm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hmActionPerformed(evt);
            }
        });
        jToolBar5.add(hm);

        jTabbedPane1.addTab("MENYICIL", jToolBar5);

        tblAkun.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Nama", "Alamat", "Gender", "Role", "Blocked", "Masuk"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAkun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAkunMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblAkun);

        jTabbedPane2.addTab("Akun", jScrollPane2);

        tblAset.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Ket", "Jumlah", "Tipe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAsetMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblAset);

        jTabbedPane2.addTab("ASET", jScrollPane3);

        ja.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Satu :" }));
        ja.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jaItemStateChanged(evt);
            }
        });

        tglJejak.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tglJejakItemStateChanged(evt);
            }
        });

        tblJejak.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kegiatan", "Jam", "IP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblJejak);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1126, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ja, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tglJejak, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tglJejak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("JEJAK", jPanel1);

        tblHutang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "KODE", "KE", "JUMLAH", "TANGGAL", "KETERANGAN", "BUNGA", "LUNAS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHutang.setColumnSelectionAllowed(true);
        tblHutang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHutangMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblHutang);
        tblHutang.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTabbedPane2.addTab("HUTANG", jScrollPane4);

        sh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Satu :" }));
        sh.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                shItemStateChanged(evt);
            }
        });

        tblMenyicil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "KODE", "SUMBER", "TANGGAL", "JUMLAH"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMenyicil.setColumnSelectionAllowed(true);
        tblMenyicil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMenyicilMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblMenyicil);
        tblMenyicil.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sh, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1132, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("MENYICIL", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane2)
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setTitle(this.getTitle()+a.getNama());try {
        java.sql.ResultSet rs=d.keluar("select distinct tgl from jejak order by tgl desc");
        while(rs.next())tglJejak.addItem(rs.getDate("tgl"));rs.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        util.db.hindar(ex);
    }new Thread(new Runnable() {
            @Override
            public void run() {
                while(isVisible())try {
                    refresh();
                    } catch (SQLException | InterruptedException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                        util.db.hindar(ex);
                    }
            }
        }).start();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        java.io.File f=new java.io.File(System.getProperty("user.home")+"/.akutansi/config.user");
        if(!f.exists()){
            try {
                metu();
            } catch (UnknownHostException | SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                util.db.hindar(ex);
            }
        }else takok();
    }//GEN-LAST:event_formWindowClosing

    private void tblAkunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAkunMouseClicked
        int s=tblAkun.getSelectedRow();
        boolean b=tblAkun.isRowSelected(s);if(b){
            try {
                sa=new entity.Akun(""+tblAkun.getValueAt(s, 0), d);
                hak.setEnabled(true);
                eak.setEnabled(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                util.db.hindar(ex);
            }
        }
    }//GEN-LAST:event_tblAkunMouseClicked

    private void tblAsetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAsetMouseClicked
        int x=tblAset.getSelectedRow();
        boolean b=tblAset.isRowSelected(x);if(b){
            try {
                aset=new entity.Aset(""+tblAset.getValueAt(x, 0), d);
                has.setEnabled(true);
                ea.setEnabled(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                util.db.hindar(ex);
            }
        }
    }//GEN-LAST:event_tblAsetMouseClicked

    private void jaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jaItemStateChanged
    try {
        javax.swing.table.DefaultTableModel m=(javax.swing.table.DefaultTableModel) tblJejak.getModel();
        for(int x=m.getRowCount()-1;x>=0;x--)m.removeRow(x);
        if(!ja.getSelectedItem().equals("Pilih Satu :")&&ja.getSelectedItem()!=null&&tglJejak.getSelectedItem()!=null){
            java.sql.PreparedStatement ps=d.getPS("select keg,jam,dari from jejak where akun=? and tgl=? order by jam desc");
            ps.setString(1, ja.getItemAt(ja.getSelectedIndex()));ps.setDate(2, tglJejak.getItemAt(tglJejak.getSelectedIndex()));
            java.sql.ResultSet rs=ps.executeQuery();
            while(rs.next())m.addRow(new Object[]{rs.getString("keg"),rs.getTime("jam"),rs.getString("dari")});
            rs.close();ps.close();
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        util.db.hindar(ex);
    }
    }//GEN-LAST:event_jaItemStateChanged

    private void tglJejakItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tglJejakItemStateChanged
        this.jaItemStateChanged(evt);
    }//GEN-LAST:event_tglJejakItemStateChanged

    private void tblHutangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHutangMouseClicked
        int x=tblHutang.getSelectedRow();
        boolean b=tblHutang.isRowSelected(x);
        if(b)try {
            hutang=new entity.Hutang(""+tblHutang.getValueAt(x, 0), d);
            uh.setEnabled(true);
            dh.setEnabled(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
    }//GEN-LAST:event_tblHutangMouseClicked

    private void shItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_shItemStateChanged
    try {
        menyicil();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        util.db.hindar(ex);
    }
    }//GEN-LAST:event_shItemStateChanged

    private void dhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dhActionPerformed
        int x=JOptionPane.showConfirmDialog(rootPane, "Apa anda ingin menghapus hutang "+hutang.getKode()+"?", "HAPUS", JOptionPane.YES_NO_OPTION);
        if(x==JOptionPane.YES_OPTION)
        try {
            new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Menghapus hutang "+hutang.getKode(), java.sql.Date.valueOf(LocalDate.now()),
                java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
        new entity.dao.DAOHutang(d).delete(hutang);
        hutang();
        } catch (SQLException | UnknownHostException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }dh.setEnabled(false);
        uh.setEnabled(false);
    }//GEN-LAST:event_dhActionPerformed

    private void uhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uhActionPerformed
        try {
            new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Akan mengubah hutang "+hutang.getKode(), java.sql.Date.valueOf(LocalDate.now()),
                java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
        new ui.operation.hutang.Edit(d, a, hutang).setVisible(true);
        this.setVisible(false);
        } catch (SQLException | UnknownHostException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
    }//GEN-LAST:event_uhActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Akan menambah Hutang", java.sql.Date.valueOf(LocalDate.now()),
                java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
        new ui.operation.hutang.Add(d, a).setVisible(true);
        this.setVisible(false);
        } catch (SQLException | UnknownHostException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void hasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasActionPerformed
        int x=JOptionPane.showConfirmDialog(rootPane, "Apa anda ingin menghapus aset "+aset.getKode()+"?", "HAPUS?", JOptionPane.YES_NO_OPTION);
        if(x==JOptionPane.YES_OPTION){
            try {
                new entity.dao.DAOAset(d).delete(aset);
                new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Telah menghapus aset "+aset.getKode(),java.sql.Date.valueOf(LocalDate.now()),
                    java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
            aset();
        } catch (SQLException | UnknownHostException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
        }has.setEnabled(false);
        ea.setEnabled(false);
    }//GEN-LAST:event_hasActionPerformed

    private void eaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eaActionPerformed
        try {
            new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Akan Mengubah aset "+aset.getKode(), java.sql.Date.valueOf(LocalDate.now()),
                java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
        new ui.operation.modal.EditModal(d, a, aset).setVisible(true);
        this.setVisible(false);
        } catch (SQLException | UnknownHostException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
    }//GEN-LAST:event_eaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Akan menambah aset baru", java.sql.Date.valueOf(LocalDate.now()),
                java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
        new ui.operation.modal.addModal(d, a).setVisible(true);
        this.setVisible(false);
        } catch (SQLException | UnknownHostException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void hakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hakActionPerformed
        int x=JOptionPane.showConfirmDialog(rootPane, "Apa anda ingin menghapus "+sa.getAkun()+"?", "HAPUS?", JOptionPane.YES_NO_OPTION);
        if(x==JOptionPane.YES_OPTION){
            try {
                new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Menghapus akun "+sa.getAkun(), java.sql.Date.valueOf(LocalDate.now()),
                    java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
            new entity.dao.DAOAkun(d).delete(sa);
            jejak();
            akun();
        } catch (SQLException | UnknownHostException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
        }hak.setEnabled(false);eak.setEnabled(false);
    }//GEN-LAST:event_hakActionPerformed

    private void eakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eakActionPerformed
        try {
            new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Akan mengubah "+sa.getAkun(), java.sql.Date.valueOf(LocalDate.now()),
                java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
        new ui.operation.akun.EditAkun(d, a, sa).setVisible(true);
        this.setVisible(false);
        } catch (SQLException | UnknownHostException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
    }//GEN-LAST:event_eakActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Akan menambah AKun baru", java.sql.Date.valueOf(LocalDate.now()),
                java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
        new ui.operation.akun.AddAkun(a, d).setVisible(true);
        this.setVisible(false);
        } catch (SQLException | UnknownHostException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.formWindowClosing(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    try {
        new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Akan menyicil hutang", java.sql.Date.valueOf(LocalDate.now()),
                java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
    } catch (SQLException | UnknownHostException ex) {
        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        util.db.hindar(ex);
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void emActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emActionPerformed

    private void hmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hmActionPerformed

    private void tblMenyicilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMenyicilMouseClicked
        int x=tblMenyicil.getSelectedRow();
        boolean b=tblMenyicil.isRowSelected(x);if(b)try {
            menyicil=new entity.Menyicil(""+tblMenyicil.getValueAt(x, 0), d);
            em.setEnabled(true);
            hm.setEnabled(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            util.db.hindar(ex);
        }
    }//GEN-LAST:event_tblMenyicilMouseClicked

    private void refresh() throws SQLException, InterruptedException {
        a=new entity.Akun(a.getAkun(), d);if(!a.isSesi()||a.isBlocked()||a.isDeleted()||!a.isRole()){
            JOptionPane.showMessageDialog(rootPane, "Good bye!");
            new Login(d).setVisible(true);
            this.setVisible(false);
        }jejak();
        akun();
        aset();
        hutang();
        menyicil();
        Thread.sleep(5000);
    }

    private void takok() {
        int x=JOptionPane.showConfirmDialog(rootPane, "Apa anda ingin menghapus cookies anda?", "HAPUS?", JOptionPane.YES_NO_OPTION);if(x==JOptionPane.YES_OPTION){
            try {
                new java.io.File(System.getProperty("user.home")+"/.akutansi/config.user").delete();
                entity.dao.DAOJejak jejak=new entity.dao.DAOJejak(d);
                jejak.insert(new entity.Jejak(a.getAkun(), "Menghapus Cookies", java.sql.Date.valueOf(LocalDate.now()), java.sql.Time.valueOf(LocalTime.now()),
                        java.net.InetAddress.getLocalHost().getHostAddress()));
                metu();
            } catch (SQLException | UnknownHostException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                util.db.hindar(ex);
            }
        }else{
            try {
                new entity.dao.DAOJejak(d).insert(new entity.Jejak(a.getAkun(), "Menghentikan Program", java.sql.Date.valueOf(LocalDate.now()),
                        java.sql.Time.valueOf(LocalTime.now()),java.net.InetAddress.getLocalHost().getHostAddress()));
                d.close();System.exit(0);
            } catch (SQLException | UnknownHostException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }
    }

    private void metu() throws UnknownHostException, SQLException {
        entity.Akun b=new entity.Akun(a.getAkun(), d);b.setSesi(false);
                new entity.dao.DAOAkun(d).update(a, b);
                entity.dao.DAOJejak jejak=new entity.dao.DAOJejak(d);
                jejak.insert(new entity.Jejak(a.getAkun(), "Logout", java.sql.Date.valueOf(LocalDate.now()), java.sql.Time.valueOf(LocalTime.now()),
                        java.net.InetAddress.getLocalHost().getHostAddress()));
                new Login(d).setVisible(true);
                this.setVisible(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dh;
    private javax.swing.JButton ea;
    private javax.swing.JButton eak;
    private javax.swing.JButton em;
    private javax.swing.JButton hak;
    private javax.swing.JButton has;
    private javax.swing.JButton hm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JToolBar jToolBar5;
    private javax.swing.JComboBox<String> ja;
    private javax.swing.JComboBox<String> sh;
    private javax.swing.JTable tblAkun;
    private javax.swing.JTable tblAset;
    private javax.swing.JTable tblHutang;
    private javax.swing.JTable tblJejak;
    private javax.swing.JTable tblMenyicil;
    private javax.swing.JComboBox<java.sql.Date> tglJejak;
    private javax.swing.JButton uh;
    // End of variables declaration//GEN-END:variables

    private void jejak() throws SQLException {
        if(!"Pilih Satu :".equals(ja.getSelectedItem())&&null!=ja.getSelectedItem()){
            javax.swing.table.DefaultTableModel m=(javax.swing.table.DefaultTableModel) tblJejak.getModel();
            for(int x=m.getRowCount()-1;x>=0;x--)m.removeRow(x);
            java.sql.PreparedStatement ps=d.getPS("select keg,jam,dari from jejak where akun=? and tgl=? order by jam");
            ps.setString(1, ja.getItemAt(ja.getSelectedIndex()));ps.setDate(2, tglJejak.getItemAt(tglJejak.getSelectedIndex()));
            java.sql.ResultSet rs=ps.executeQuery();while(rs.next())m.addRow(new Object[]{rs.getString("keg"),rs.getTime("jam"),rs.getString("dari")});
            rs.close();ps.close();
        }else{
            for(int x=1;x<ja.getItemCount();x++)ja.removeItemAt(x);
            javax.swing.table.DefaultTableModel m=(javax.swing.table.DefaultTableModel) tblJejak.getModel();
            for(int x=m.getRowCount()-1;x>=0;x--)m.removeRow(x);
            java.sql.ResultSet rs=d.keluar("select akun from akun");
            while(rs.next())ja.addItem(rs.getString("akun"));rs.close();
        }
    }

    private void akun() throws SQLException {
        javax.swing.table.DefaultTableModel m=(javax.swing.table.DefaultTableModel) tblAkun.getModel();
        for(int x=m.getRowCount()-1;x>=0;x--)m.removeRow(x);
        for(entity.Akun ak:new entity.dao.DAOAkun(d).getData())
            m.addRow(new Object[]{ak.getAkun(),ak.getNama(),ak.getAlamat(),ak.getJk(),ak.isRole(),ak.isBlocked(),ak.isSesi()});
    }

    private void aset() throws SQLException {
        javax.swing.table.DefaultTableModel m=(javax.swing.table.DefaultTableModel) tblAset.getModel();
        for(int x=m.getRowCount()-1;x>=0;x--)m.removeRow(x);
        for(entity.Aset as:new entity.dao.DAOAset(d).getData())
            m.addRow(new Object[]{as.getKode(),as.getKet(),as.getJum(),as.getTipe()});
    }

    private void hutang() throws SQLException {
        javax.swing.table.DefaultTableModel m=(javax.swing.table.DefaultTableModel) tblHutang.getModel();
        for(int x=m.getRowCount()-1;x>=0;x--)m.removeRow(x);
        for(entity.Hutang utang:new entity.dao.DAOHutang(d).getData())
            m.addRow(new Object[]{utang.getKode(),utang.getKe(),utang.getJum(),utang.getTgl(),utang.getKet(),utang.getBunga()*100,utang.isLunas()});
    }

    private void menyicil() throws SQLException {
        javax.swing.table.DefaultTableModel m=(javax.swing.table.DefaultTableModel) tblMenyicil.getModel();
        for(int x=m.getRowCount()-1;x>=0;x--)m.removeRow(x);
        if(!"Pilih Satu :".equals(sh.getSelectedItem())){
            java.sql.PreparedStatement ps=d.getPS("select kode,sumber,tgl,jum where hutang=?");ps.setString(1, sh.getItemAt(sh.getSelectedIndex()));
            java.sql.ResultSet rs=ps.executeQuery();
            while(rs.next())m.addRow(new Object[]{rs.getString("kode"),rs.getString("sumber"),rs.getDate("tgl"),rs.getLong("jum")});
            rs.close();ps.close();
        }
    }
}
